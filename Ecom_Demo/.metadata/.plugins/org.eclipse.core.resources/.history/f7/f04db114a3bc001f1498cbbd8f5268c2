package com.ecom.service;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.config.ConfigDataResourceNotFoundException;
import org.springframework.stereotype.Service;

import com.ecom.cutome_exception.ResourceNotFoundException;
import com.ecom.dao.ProductDao;
import com.ecom.dao.UserDao;
import com.ecom.dto.ApiRespDto;
import com.ecom.dto.ProductDto;
import com.ecom.entities.Products;
import com.ecom.entities.User;
import com.ecom.entities.UserRole;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class ProductServiceImpl implements ProductService {

	@Autowired
	private ProductDao productDao;
	@Autowired
	private ModelMapper modelMapper;
	@Autowired
	private UserDao userDao;

	@Override
	public ApiRespDto addProduct(ProductDto dto) {
		// TODO Auto-generated method stub

		Products product = modelMapper.map(dto, Products.class);

		Products addedProcut = productDao.save(product);

		return new ApiRespDto("Product Added With id " + addedProcut.getId());
	}

	@Override
	public ApiRespDto deleteProduct(Long productId,Long userId) {
		// TODO Auto-generated method stub

		
		User user=userDao.findById(userId).orElseThrow(()->new ResourceNotFoundException("You are not Admin"));
		
		
		if (productDao.existsById(productId) && user.getRole()==UserRole.ADMIN ) {
			productDao.deleteById(productId);
			return new ApiRespDto("Product Deleted Successfully");
		} else {
			throw new ResourceNotFoundException("Invalid Product Id");
		}

	}

}
